.TH hal_port "3hal" "2006-10-12" "Documentación LinuxCNC" "HAL"
.de FU
.sp
.ti -4
\\$*
..
.de FF
.br
.ti -4
\\$*
..
.SH NOMBRE

hal_port \- un tipo de pin hal que actúa como una secuencia de bytes asíncrona unidireccional

.SH SINOPSIS

.FU .B #include <hal.h>
.FU bool hal_port_read(hal_port_t port, char* dest, unsigned count);
.FF bool hal_port_peek(hal_port_t port, char* dest, unsigned count);
.FF bool hal_port_peek_commit(hal_port_t port, unsigned count);
.FF unsigned hal_port_readable(hal_port_t port);
.FF void hal_port_clear(hal_port_t port);

.FU bool hal_port_write(hal_port_t port, const char* src, unsigned count);
.FF unsigned hal_port_writable(hal_port_t port);

.FU unsigned hal_port_buffer_size(hal_port_t port);

.FU .B #ifdef ULAPI
.FF void hal_port_wait_readable(hal_port_t **port, unsigned count, sig_atomic_t *stop);
.FF void hal_port_wait_writable(hal_port_t **port, unsigned count, sig_atomic_t *stop);
.FF .B #endif


.SH DESCRIPCIÓN
Un pin de puerto HAL es un pin que actúa como un flujo de datos orientado a byte en tiempo real.
Un puerto de salida en cualquier componente puede conectarse a un puerto de entrada en cualquier otro componente a través de una señal. Los datos escritos en el pin de salida se vuelven accesibles para el pin de entrada.
Una señal de puerto HAL puede vincular solo un escritor y un lector.

Un puerto también almacena datos. Los usuarios deben determinar el tamaño de búfer adecuado en función de su aplicación prevista.


.SS\fBhal_port_read\fR
Lee \fIcount\fR bytes desde el puerto al búfer de destino. hal_port_read leerá \fIcount\fR bytes si y solo si \fIcount\fR bytes están disponibles para leer; de lo contrario, no afectará el puerto.
Devuelve true si se leyeron \fIcount\fR bytes y false en caso contrario.
Esta función solo debe ser invocada por el componente que posee el pin IN PORT.


.SS \fBhal_port_peek\fR
Se comporta igual que hal_port_read. Sin embargo, no consume bytes del puerto hal.
Las llamadas repetidas a hal_port_peek devolverán los mismos datos.
Devuelve true si se leyeron count bytes y false en caso contrario.
Esta función solo debe ser invocada por el componente que posee el pin IN PORT.


.SS \fBhal_port_peek_commit\fR
Avanza count bytes la posición de lectura en el búfer del puerto.
Un hal_port_peek seguido de un hal_port_peek_commit funcionaría de manera equivalente a hal_port_read dado el mismo valor de count.
Devuelve true si se omitieron count bytes leibles y ya no son accesibles y falso si no se omitieron bytes.
Esta función solo debe ser invocada por el componente que posee el pin IN PORT.


.SS \fBhal_port_readable\fR
Devuelve el número de bytes disponibles para leer desde el puerto. Es seguro llamar a esta función desde cualquier componente.

.SS \fBhal_port_clear\fR
Vacía un puerto dado de todos los datos.
hal_port_clear solo debe ser llamado por el componente que posee el pin IN PORT.

.SS \fBhal_port_write\fR
Escribe count bytes desde src al puerto.
Devuelve true si se escribieron count bytes y false en caso contrario.
Esta función solo debe ser invocada por el componente que posee el pin OUT PORT.

.SS \fBhal_port_writable\fR
Devuelve el número de bytes que se pueden escribir en el puerto.
Es seguro llamar a esta función desde cualquier componente.

.SS \fBhal_port_buffer_size\fR
Devuelve el número máximo de bytes que un puerto puede almacenar en búfer.
Es seguro llamar a esta función desde cualquier componente.

.SS \fBhal_port_wait_readable\fR
Espera hasta que el puerto tenga count bytes o más disponibles para lectura o se establezca la bandera de detención.

.SS \fBhal_port_wait_writable\fR
Espera hasta que el puerto tenga count bytes o más disponibles para escritura o se establezca la bandera de detención.


ARGUMENTOS SH
.IP \fBhal_port_t\fR
Un identificador para un objeto de puerto. Creado por hal_pin_new

.IP \fBdest\fR
Una matriz de bytes en los que hal_port_read y hal_port_peek copiarán datos. El llamador debe asignarlo y debe tener al menos count bytes de longitud.

.IP \fBcount\fR
El número de bytes que hal_port_read, hal_port_peek y hal_port_write copiarán en dest o extraeran de src

.IP \fBsrc\fR
Una matriz de bytes de la que hal_port_write copiará los datos en el búfer del puerto. Esto debe ser count bytes de tamaño o mayor.

.IP \fBstop\fR
Un puntero a un valor que se monitorea mientras se espera. Si no es cero,
la operación de espera vuelve pronto. Esto permite que una llamada wait termine de
forma segura en el caso de una señal.

.SH CÓDIGO DE MUESTRA
En el árbol fuente debajo
 src/hal/components/raster.comp es un componente en tiempo real destinado al control láser.
 src/tests/raster es un programa de prueba que también programa el componente ráster desde python.

.SH CONSIDERACIONES EN TIEMPO REAL
.BR hal_port_read "," hal_port_peek "," hal_port_peek_commit "," hal_port_readable "," hal_port_clear "," hal_port_write "," hal_port_writable " y " hal_port_buffer_size se pueden llamar desde código en tiempo real.

.BR hal_port_wait_writable " y " hal_port_wait_readable se pueden llamar desde el código ULAPI.


.SH VER TAMBIÉN
.BR raster (9),

