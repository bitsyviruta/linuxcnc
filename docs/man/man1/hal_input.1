.TH HAL_INPUT "1" "2007-02-25" "Documentación de LinuxCNC" "Manual de usuario de HAL"
.de TQ
.br
.ns
.TP \\$1
..
.SH NOMBRE
hal_input \- controla los pines HAL con cualquier dispositivo de entrada Linux, incluidos los dispositivos USB HID
.SH SINOPSIS
\fIloadusr\fR \fBhal_input\fR \fI[\-KRAL] inputspec ...\fR
.SH DESCRIPCIÓN
hal_input es una interfaz entre HAL y cualquier dispositivo de entrada de Linux, incluidos dispositivos
USB HID. Para cada dispositivo nombrado, \fBhal_input\fR crea los pines correspondientes
a sus teclas, ejes absolutos y LEDs. Sincroniza el dispositivo y los pines HAL a una tasa fija de 
aproximadamente 10 ms.
.SH ESPECIFICACIÓN DE ENTRADA
\fIinputspec\fR puede estar en una de varias formas:
.TP
Una cadena \fIS\fR
Una coincidencia de patrón de subcadena o estilo de shell se probará con el "nombre"
del dispositivo, "phys" (que proporciona información sobre cómo está conectado),
y el "id", que es una cadena de la forma "Bus=... Vendor=... Product=...
Version=... ". Puede ver el nombre, phys y id de los dispositivos conectados ejecutando \fBless /proc/bus/input/devices\fR.
Ejemplos:
.RS 12
.PD 0
SpaceBall
.PP
"Vendedor=001f Producto=0001"
.PP
serio*/input0
.RE
.PD
.TP
Un número \fIN\fR
Esto abre \fB/dev/input/event\fIN\fR. Excepto para los dispositivos que siempre están
conectado al sistema, este número puede cambiar despues de reinicios o cuando el dispositivo
es removido. Por esta razón, no se recomienda usar un número entero.
.PP
Cuando varios dispositivos se identifican con la misma cadena, agregue "\fB:\fIN\fR" donde
\fIN\fR es el índice del dispositivo deseado. Por ejemplo, si \fBMouse\fR
coincide con \fBinput3\fR y \fBinput10\fR, entonces \fBMouse\fR y \fBMouse:0\fR
seleccionan \fBinput3\fR. Especificando \fBmouse:1\fR selecciona \fRinput10\fR.
.PP
Para los dispositivos que aparecen como entradas múltiples en /dev/input, es probable que estos índices
permanezca igual todo el tiempo. Para dispositivos idénticos múltiples, es probable que los 
índices dependan del orden de inserción, pero permanezcan iguales en los reinicios siempre que los 
dispositivos no se muevan a diferentes puertos o sean desenchufados
mientras la máquina está iniciada.
.PP
Si el primer carácter de \fIinputspec\fR es un "+", entonces \fBhal_input\fR
solicita acceso exclusivo al dispositivo. Se usa el primer dispositivo que coincide con un
\fIinputspec\fR. Se puede usar cualquier cantidad de \fIinputspec\fRs.
.PP
Una opción \fIsubset \fI puede preceder a cada \fIinputspec\fR. La opción de subconjunto
comienza con un guion. Cada letra en la opción de subconjunto especifica una característica del 
dispositivo a \fBincluir\fR. Las características que no están especificadas quedan excluidas.
Por ejemplo, para exportar LEDs de teclado a HAL sin exportar teclas, use
.RS 12
hal_input \-L \fIkeyboard\fR ...
.RE

.SH CARACTERÍSTICAS DEL DISPOSITIVO SOPORTADAS
.IP \(bu 4
EV_KEY (botones y teclas). Subconjunto \-K
.IP \(bu 4
EV_ABS (entradas analógicas absolutas). Subconjunto \-A
.IP \(bu 4
EV_REL (entradas analógicas relativas). Subconjunto \-R
.IP \(bu 4
EV_LED (salidas de LED). Subconjunto \-L
.SH PINES HAL Y PARÁMETROS
.SS Para botones
.TP
.B input.\FIN\fB.btn\-\fIname\fR bit out
.TQ
.B input.\FIN\fB.btn\-\fIname\fB\-not\fR bit out
Creado para cada botón en el dispositivo.
.SS Para teclas
.TP
.B input.\FIN\fB.key\-\fIname\fB
.TQ
.B input.\FIN\fB.key\-\fIname\fB\-not
Creado para cada tecla en el dispositivo.
.SS Para ejes absolutos
.TP
.B input.\FIN\fB.abs\-\fIname\fB\-count\fR s32 out
.TQ
.B input.\FIN\fB.abs\-\fIname\fB\-position\fR float out
.TQ
.B input.\FIN\fB.abs\-\fIname\fB\-scale\fR parámetro float rw
.TQ
.B input.\FIN\fB.abs\-\fIname\fB\-offset\fR parámetro float rw
.TQ
.B input.\FIN\fB.abs\-\fIname\fB\-fuzz\fR parámetro s32 rw
.TQ
.B input.\FIN\fB.abs\-\fIname\fB\-flat\fR parámetro s32 rw
.TQ
.B input.\FIN\fB.abs\-\fIname\fB\-min\fR parámetro s32 r
.TQ
.B input.\FIN\fB.abs\-\fIname\fB\-max\fR parámetro s32 r
Creado para cada eje absoluto en el dispositivo. Posiciones del dispositivo más cerca de
\fBflat\fR que \fBoffset\fR se informan como \fBoffset\fR en \fBcounts\fR, y
\fBcounts\fR no cambia hasta que la posición del dispositivo cambie al menos
\fBfuzz\fR. La posición se calcula como \fBposition\fR = (\fBcounts\fR \ -
\fBoffset\fR) / \fBscale\fR. El valor predeterminado de \fBscale\fR y \fBoffset\fR
mapea el rango del eje reportado por el sistema operativo a [\-1,1].
Los valores predeterminados de \fBfuzz\fR y \fBflat\fR son los informados por el operador del
sistema. Los valores de \fBmin\fR y \fBmax\fR son los que informa el
sistema operativo.
.SS Para ejes relativos
.TP
.B input.\FIN\fB.rel\-\fIname\fB\-count\fR s32 out
.TQ
.B input.\FIN\fB.rel\-\fIname\fB\-position\fR float out
.TQ
.B input.\FIN\fB.rel\-\fIname\fB\-reset\fR bit in
.TQ
.B input.\FIN\fB.rel\-\fIname\fB\-scale\fR parámetro float rw
.TQ
.B input.\FIN\fB.rel\-\fIname\fB\-absolute\fR parámetro s32 rw
.TQ
.B input.\FIN\fB.rel\-\fIname\fB\-precision\fR parámetro s32 rw
.TQ
.B input.\FIN\fB.rel\-\fIname\fB\-last\fR parámetro s32 rw
Creado para cada eje relativo en el dispositivo. Siempre que \fBreset\fR sea verdadero,
\fBcounts\fR se restablece a cero independientemente de cualquier movimiento de eje anterior o actual.
De lo contrario, \fBcounts\fR aumenta o disminuye según el movimiento del
eje. \fBcounts\fR se divide por\fRposition\-scale\fR para dar \fBposition\fR.
El valor predeterminado de \fBposition\fR es 1. Hay algunos dispositivos, especialmente
ruedas de desplazamiento, que devuelven valores con signo con menor resolución que 32 bits.
El valor predeterminado de \fBprecision\fR es 32. \fBprecision\fR se puede establecer en 8
para un dispositivo que devuelve valores de 8 bits con signo, o cualquier otro valor de 1 a 32.
\fBabsolute\fR, cuando se establece como verdadero, ignora los eventos duplicados con el mismo valor.
Esto permite que los dispositivos que repiten eventos sin ninguna acción del usuario funcionen
correctamente. \fBlast\fR muestra el valor de recuento más reciente devuelto por el
dispositivo, y se utiliza en la implementación de \fBabsolute\fR.
.SS Para LED
.TP
.B input.\FIN\fB.led\-\fIname\fR bit out
.TQ
.B input.\FIN\fB.led\-\fIname\fB\-invert\fR parámetro bit rw
Creado para cada LED en el dispositivo.
.SH PERMISOS Y UDEV
Por defecto, los dispositivos de entrada pueden no ser accesibles para
usuarios --\fBhal_input\fR requiere acceso de lectura-escritura, incluso si el dispositivo no tiene
salidas.

Las diferentes versiones de udev tienen sintaxis ligeramente diferentes e incompatibles. por
esta razón, no es posible que esta página de manual proporcione un
ejemplo. La página del manual
.B udev (7)
documenta la sintaxis utilizada en su distribución de Linux.
Para verlo en una terminal, el comando es
.BR "man 7 udev".

.SH BUGS
El estado inicial de las teclas, botones y ejes absolutos se informa erróneamente
como FALSE o 0 hasta que se reciba un evento para esa tecla, botón o eje.
.SH VEA TAMBIÉN
\fBudev(8)\fR, \fBudev(7)\fR