= Configuración de referencia

[[cha: configuración de referencia]]

== Descripción general

Homing establece el origen cero de las coordenadas de la máquina G53. +
Los límites suaves se definen en relación con el origen de la máquina. +
Los límites suaves automáticamente desaceleran y detienen los ejes antes de que toquen los interruptores de límites +
Una máquina configurada y funcionando correctamente no se moverá más allá de los límites de software (software) y +
tendrá el origen de la máquina configurado tan repetible como el mecanismo de cambio / índice de inicio. +
Linuxcnc se puede alojar por ojo (marcas de alineación), con interruptores, con interruptores e índice de codificador, o utilizando codificadores absolutos. +
El recorrido de referencia parece bastante simple: simplemente mueva cada articulación a una ubicación conocida,
y establecer las variables internas de LinuxCNC en consecuencia. +
Sin embargo, diferentes máquinas tienen diferentes requisitos, y el recorrido de referencia es realmente bastante
Complicado.

[NOTA]
Si bien es posible usar linuxcnc sin interruptores de referencia / procedimientos de inicio o interruptores de límite,
Derrota la seguridad adicional de los límites suaves.

== Prerrequisito
Homing se basa en algunos supuestos fundamentales de la máquina. +

* Las direcciones negativa y positiva se basan en << seg: Configuraciones de la máquina, Movimiento de la herramienta >> que puede ser diferente +
entonces el movimiento real de la máquina. es decir, en un molino, la mesa se mueve más que la herramienta.
* Todo está referenciado desde el origen cero de la máquina G53, el origen puede estar en cualquier lugar (incluso fuera de donde puede moverse) +
* El origen cero de la máquina G53 está típicamente dentro del área de límites suaves, pero no necesariamente. +
* El desplazamiento del interruptor de referencia establece dónde está el origen, pero incluso se hace referencia desde el origen. +
* Los límites negativos de software (software) son lo máximo que puede mover en la dirección negativa después de dirigir. +
(pero pueden no ser negativos en sentido absoluto) +
* Los límites positivos de software (software) son lo máximo que puede mover en la dirección positiva después de dirigir. +
(pero podrían no ser positivos en sentido absoluto, aunque es habitual establecerlo como un número positivo) +
* Los límites de software (software) están dentro del área del interruptor de límite. +
* (Si se utiliza el recorrido de referencia basado en conmutadores), los conmutadores de referencia utilizan los interruptores de límite (inicio compartido / interruptor de límite), +
o cuando se usa un interruptor de inicio separado, están dentro del área del interruptor de límite.
* Si usa un interruptor de referencia independiente, es posible comenzar a buscar en el lado equivocado del interruptor de inicio, +
que, combinado con la opción HOME_IGNORE_LIMITS, provocará un bloqueo grave. +
Puede evitar esto haciendo que el interruptor de inicio cambie su estado cuando el perro de viaje está en un lado en particular hasta que vuelva a pasar el punto de viaje nuevamente. +
Dicho de otra manera, el estado del interruptor de inicio debe representar la posición del perro con respecto al interruptor (es decir, antes o después del interruptor), +
y debe permanecer así incluso si el perro pasa por el interruptor en la misma dirección.


== Diseño de ejemplo de interruptor de inicio separado

Este ejemplo muestra los interruptores de límite mínimo y máximo con un interruptor de inicio separado. +

Diseño de interruptor separado demostrativo.

image :: images / HomeAxisTravel_V2.png [align = "center", alt = "Ejemplo de diseño del conmutador de referencia"]


* A es el límite blando negativo
* B es la coordenada de máquina G53 Origen
* C es el punto de disparo del interruptor de inicio
* D es el límite suave positivo
* H es la posición inicial final (INICIO) = 0 unidades
* -L y + L son los puntos de disparo de los interruptores de límite
* A <-> B son los límites suaves negativos (MIN_LIMITS) = -3 unidades
* B <-> C es el home_offset (HOME_OFFSET) = -2.3 unidades
* B <-> D son los límites suaves positivos (MAX_LIMITS) = 7 unidades
* A <-> D es el recorrido total = 10 unidades
* La distancia entre los interruptores de límite y los límites suaves (-L <-> A y D <- + L) se amplía en este ejemplo
* Tenga en cuenta que hay una distancia entre los interruptores de límite y el contacto físico real para la inercia después de que el amplificador esté desactivado.

[NOTA]
Homing establece el sistema de coordenadas G53, mientras que el origen de la máquina (punto cero) puede estar en cualquier lugar, +
establecer el punto cero en el límite suave negativo hace que todas las coordenadas G53 sean positivas, +
lo cual es probablemente más fácil de recordar. Haga esto configurando MIN_LIMIT = 0 y asegúrese de que MAX_LIMIT sea positivo.

== Límite compartido / Diseño de ejemplo de cambio de inicio

Este ejemplo muestra un interruptor de límite máximo y un interruptor combinado de límite mínimo / inicio. +

.Diseño demostrativo de conmutador compartido

image :: images / HomeAxisTravel_V3.png [align = "center", alt = "Ejemplo de diseño de interruptor de límite de inicio compartido"]


* A es el límite blando negativo
* B es la coordenada de máquina G53 Origen
* C es el punto de disparo del interruptor de inicio compartido con (-L) viaje de límite mínimo
* D es el límite suave positivo
* H es la posición inicial final (INICIO) = 3 unidades
* -L y + L son los puntos de disparo del interruptor de límite
* A <-> B son los límites suaves negativos (MIN_LIMITS) = 0 unidades
* B <-> C es el home_offset (HOME_OFFSET) = -0.7 unidades
* B <-> D son los límites suaves positivos (MAX_LIMITS) 10 unidades
* A <-> D es el recorrido total = 10 unidades
* La distancia entre los interruptores de límite y los límites suaves (-L <-> A y D <-> + L) se amplía en este ejemplo
* Tenga en cuenta que hay una distancia entre los interruptores de límite y el contacto físico real para la inercia después de que el amplificador esté desactivado.

== Secuencia de referencia

Hay cuatro posibles secuencias de referencia definidas por el signo de HOME_SEARCH_VEL
y HOME_LATCH_VEL, junto con los parámetros de configuración asociados como se muestra
en la siguiente tabla. Existen dos condiciones básicas, HOME_SEARCH_VEL y
HOME_LATCH_VEL son el mismo signo o son signos opuestos. Para una mayor
descripción detallada de lo que hace cada parámetro de configuración, vea el
sección siguiente.

Secuencias florecientes

image :: images / emc2-motion-homing-diag.png [align = "center", alt = "Secuencias de referencia"]

== Configuración

Lo siguiente determina exactamente cómo se comporta la secuencia de inicio.
Se definen en una sección [JOINT_n] del inifile.

[ancho = "80%", opciones = "encabezado", cols = "4 * ^"]
| ================================================= =========
| Tipo de referencia | HOME_SEARCH_VEL | HOME_LATCH_VEL | HOME_USE_INDEX
| Inmediato | 0 | 0 | NO
| Solo índice | 0 | distinto de cero | SÍ
| Solo conmutador | distinto de cero | distinto de cero | NO
| Interruptor e índice | distinto de cero | distinto de cero | SÍ
| ================================================= =========

[NOTA]
Cualquier otra combinación puede provocar un error.

=== HOME_SEARCH_VEL (((HOME SEARCH VEL)))

Esta variable tiene unidades de unidades de máquina por segundo.

El valor por defecto es cero. Un valor de cero hace que LinuxCNC asuma que
no hay interruptor de inicio; se omite la etapa de búsqueda del recorrido de referencia.

Si HOME_SEARCH_VEL no es cero, entonces LinuxCNC supone que hay un hogar
cambiar. Comienza comprobando si el interruptor de inicio ya está
tropezado Si se disparó, retrocede el interruptor en HOME_SEARCH_VEL. los
la dirección del retroceso es opuesta al signo de HOME_SEARCH_VEL. Entonces
busca el interruptor de inicio moviéndose en la dirección especificada por
el signo de HOME_SEARCH_VEL, a una velocidad determinada por su absoluto
valor. Cuando se detecta el interruptor de inicio, la articulación se detendrá tan rápido como
posible, pero siempre habrá un exceso. La cantidad de
el exceso depende de la velocidad. Si es demasiado alto, la articulación podría
sobrepasar lo suficiente para golpear un interruptor de límite o chocar contra el final del viaje.
Por otro lado, si HOME_SEARCH_VEL es demasiado bajo, el recorrido de referencia puede tomar un
largo tiempo.

=== HOME_LATCH_VEL (((HOME LATCH VEL)))

Esta variable tiene unidades de unidades de máquina por segundo.

Especifica la velocidad y dirección que utiliza LinuxCNC cuando realiza su
determinación final precisa del interruptor de inicio (si está presente) e índice
ubicación del pulso (si está presente). Por lo general, será más lento que la búsqueda.
velocidad para maximizar la precisión. Si HOME_SEARCH_VEL y HOME_LATCH_VEL
tienen el mismo signo, entonces la fase de cierre se realiza mientras se mueve en el
misma dirección que la fase de búsqueda. (En ese caso, LinuxCNC primero retrocede
el interruptor, antes de moverse hacia él nuevamente a la velocidad de cierre). Si
HOME_SEARCH_VEL y HOME_LATCH_VEL tienen signos opuestos, la fase de cierre
se realiza mientras se mueve en la dirección opuesta a la fase de búsqueda.
Eso significa que LinuxCNC bloqueará el primer pulso después de que salga del
cambiar. Si HOME_SEARCH_VEL es cero (lo que significa que no hay un interruptor de inicio),
y este parámetro no es cero, LinuxCNC pasa al pulso de índice
buscar. Si HOME_SEARCH_VEL no es cero y este parámetro es cero,
es un error y la operación de búsqueda fallará. El valor predeterminado es
cero.

=== HOME_FINAL_VEL

Esta variable tiene unidades de unidades de máquina por segundo.

Especifica la velocidad que utiliza LinuxCNC cuando realiza su movimiento desde
HOME_OFFSET a la posición HOME. Si falta HOME_FINAL_VEL en
el archivo ini, luego se usa la velocidad máxima conjunta para hacer este movimiento.
El valor debe ser un número positivo.

=== HOME_IGNORE_LIMITS (((HOME IGNORE LIMITS)))

Puede contener los valores SÍ / NO. El valor predeterminado para este parámetro es NO.
Este indicador determina si LinuxCNC ignorará la entrada del interruptor de límite
para esta articulación mientras se dirige. Esta configuración no ignorará las entradas de límite.
para otras articulaciones Si no tiene un interruptor de inicio separado, configúrelo en SÍ y
conecte la señal del interruptor de límite a la entrada del interruptor de inicio conjunto en HAL. LinuxCNC
ignorará la entrada del interruptor de límite para esta articulación durante el recorrido de referencia. Para usar solo
Una entrada para todo el recorrido de referencia y los límites, tendrá que bloquear las señales de límite
de las articulaciones que no se orientan en HAL y se juntan en una articulación a la vez.

=== HOME_USE_INDEX (((ÍNDICE DE USO DEL HOGAR)))

Especifica si hay o no un pulso de índice. Si la bandera es verdadera
(HOME_USE_INDEX = YES), LinuxCNC se enganchará en el borde ascendente del índice
legumbres. Si es falso, LinuxCNC se enganchará en el borde ascendente o descendente de
el interruptor de inicio (dependiendo de los signos de HOME_SEARCH_VEL y
HOME_LATCH_VEL). El valor predeterminado es no.

[NOTA]
HOME_USE_INDEX requiere conexiones en su archivo hal para joint.n.index-enable
del encoder.n.index-enable.

=== HOME_INDEX_NO_ENCODER_RESET (((ÍNDICE DE INICIO SIN REINICIO DEL CODIFICADOR)))

El valor predeterminado es NO. Utilice SÍ si el codificador utilizado para esta articulación no
restablecer su contador cuando se detecta un pulso de índice después de la aserción
de la articulación index_enable hal pin.
Aplicable solo para HOME_USE_INDEX = YES.


=== HOME_OFFSET (((HOME OFFSET)))

Esto define la ubicación del punto cero de origen del sistema de coordenadas de la máquina G53. +
Es la distancia (desplazamiento), en unidades conjuntas, desde el origen de la máquina hasta el interruptor de inicio
punto de disparo o pulso índice. +
Después de detectar el punto de disparo del interruptor / pulso de índice, LinuxCNC establece la posición de la coordenada conjunta
a HOME_OFFSET, definiendo así el origen, desde el cual el soft limita las referencias.
El valor por defecto es cero.

NOTA: La ubicación del interruptor de inicio, como lo indica la variable HOME_OFFSET,
puede estar dentro o fuera de los límites suaves. Se compartirán con o dentro del
finales de carrera duros.

=== INICIO (((INICIO)))

La posición a la que irá la articulación al finalizar el recorrido de referencia
secuencia. Después de detectar el interruptor de inicio o el interruptor de inicio, luego indexe el pulso
(según la configuración) y establecer la coordenada de ese punto en
HOME_OFFSET, LinuxCNC se traslada a HOME como el paso final de la búsqueda
proceso. El valor por defecto es cero. Tenga en cuenta que incluso si este parámetro es el
igual que HOME_OFFSET, la articulación sobrepasará ligeramente la posición bloqueada como
para. Por lo tanto, siempre habrá un pequeño movimiento en este momento (a menos que
HOME_SEARCH_VEL es cero, y se omitió toda la etapa de búsqueda / bloqueo). Esta
el movimiento final se realizará a la velocidad máxima de la articulación a menos que HOME_FINAL_VEL tenga
Se ha establecido.

[NOTA]
La distinción entre 'HOME_OFFSET' y 'HOME' es que primero 'HOME_OFFSET'
establece la ubicación de origen y la escala en la máquina aplicando el 'HOME_OFFSET'
valor a la ubicación donde se encontró la casa, y luego 'HOME' dice dónde
articulación debe moverse a esa escala.

=== HOME_IS_SHARED (((HOME SE COMPARTE)))

Si no hay una entrada de interruptor de inicio separada para esta articulación, sino un
cantidad de interruptores momentáneos conectados al mismo pin, establezca este valor en 1
para evitar que el inicio se inicie si uno de los conmutadores compartidos es
ya está cerrado. Establezca este valor en 0 para permitir el recorrido de referencia incluso si el interruptor
Ya está cerrado.

=== HOME_ABSOLUTE_ENCODER (((CODIFICADOR ABSOLUTO INICIO)))

Uso para codificadores absolutos. Cuando se hace una solicitud para albergar la articulación,
la posición conjunta actual se establece en el valor '[JOINT_n] HOME_OFFSET'.

El movimiento final a la posición '[JOINT_n] INICIO' es opcional según
a la configuración 'HOME_ABSOLUTE_ENCODER':

----
HOME_ABSOLUTE_ENCODER = 0 (predeterminado) la articulación no usa un codificador absoluto
HOME_ABSOLUTE_ENCODER = 1 Codificador absoluto, movimiento final a [JOINT_n] HOME
HOME_ABSOLUTE_ENCODER = 2 Codificador absoluto, NO movimiento final a [JOINT_n] HOME
----

[NOTA]
Una configuración HOME_IS_SHARED se ignora silenciosamente.
[NOTA]
Una solicitud para volver a colocar la articulación se ignora en silencio.

[[sec: sección de referencia]] (((SECUENCIA DE INICIO)))

=== SECUENCIA DE INICIO (((SECUENCIA DE INICIO)))

Se usa para definir una secuencia de referencia múltiple * HOME ALL * y aplicar
orden de referencia (p. ej., Z puede no estar orientado si X aún no está alojado). Una articulación
puede ser dirigido después de todas las articulaciones con un valor más bajo (valor absoluto)
HOME_SEQUENCE ya ha sido alojado y está en HOME_OFFSET. Si
dos articulaciones tienen la misma HOME_SEQUENCE, pueden estar alojadas al mismo
hora.

[NOTA]
Si HOME_SEQUENCE no se especifica, la unión no será
guiado por la secuencia * HOME ALL * (pero puede ser guiado por un individuo
comandos de referencia específicos de la articulación).

El número inicial de HOME_SEQUENCE puede ser 0, 1 (o -1). los
el valor absoluto de los números de secuencia debe incrementarse en uno:
saltar números de secuencia no es compatible. Si un número de secuencia
se omite, * HOME ALL * el recorrido de referencia se detendrá al finalizar el
Último número de secuencia válido.

* Negativo * Los valores de HOME_SEQUENCE indican que las uniones en la secuencia
debería * sincronizar el movimiento final * a [JOINT_n] HOME esperando hasta que todos
las articulaciones en la secuencia están listas. Si alguna articulación tiene un * negativo *
HOME_SEQUENCE, luego todas las uniones con el mismo valor absoluto
(positivo o negativo) del valor del elemento HOME_SEQUENCE se sincronizará
El movimiento final.

Un * negativo * HOME_SEQUENCE también se aplica a los comandos para iniciar un solo
articulación. Si el valor de HOME_SEQUENCE es * negativo *, todas las juntas que tienen
el mismo valor absoluto de esa HOME_SEQUENCE será * alojado juntos
con un movimiento final sincronizado *. Si el valor de HOME_SEQUENCE es
cero o positivo, un comando para dar inicio a la articulación solo mostrará el
articulación especificada.

El modo de articulación de las articulaciones que tienen una HOME_SEQUENCE negativa es
no permitido En aplicaciones de pórtico comunes, tal trote puede conducir
a la desalineación (trasiego). Tenga en cuenta que trotar convencional en
las coordenadas mundiales siempre están disponibles una vez que una máquina está alojada.

Ejemplos para un sistema de 3 articulaciones
    
Dos secuencias (0,1), sin sincronización

----
[JOINT_0] HOME_SEQUENCE = 0
[JOINT_1] HOME_SEQUENCE = 1
[JOINT_2] HOME_SEQUENCE = 1
----
    
Dos secuencias, articulaciones 1 y 2 sincronizadas

----
[JOINT_0] HOME_SEQUENCE = 0
[JOINT_1] HOME_SEQUENCE = -1
[JOINT_2] HOME_SEQUENCE = -1
----

Con valores mixtos positivos y negativos, las articulaciones 1 y 2 sincronizadas

----
[JOINT_0] HOME_SEQUENCE = 0
[JOINT_1] HOME_SEQUENCE = -1
[JOINT_2] HOME_SEQUENCE = 1
----

    
Una secuencia, sin sincronización

----
[JOINT_0] HOME_SEQUENCE = 0
[JOINT_1] HOME_SEQUENCE = 0
[JOINT_2] HOME_SEQUENCE = 0
----
    
Una secuencia, todas las articulaciones sincronizadas

----
[JOINT_0] HOME_SEQUENCE = -1
[JOINT_1] HOME_SEQUENCE = -1
[JOINT_2] HOME_SEQUENCE = -1
----
    

=== VOLATILE_HOME (((VOLATILE HOME)))

Si esta configuración es verdadera, esta unión queda sin alojamiento cada vez que
la máquina pasa al estado OFF. Esto es apropiado para
cualquier articulación que no mantenga la posición cuando el accionamiento de la articulación está
apagado. Algunas unidades paso a paso, especialmente las unidades de microstep, pueden necesitar
esta.

=== LOCKING_INDEXER (((INDICADOR DE BLOQUEO)))

Si esta junta es un indexador rotativo de bloqueo, se desbloqueará antes
guiado y bloqueo después.

=== Referencia inmediata (((Referencia inmediata)))

Si una articulación no tiene interruptores de inicio o no tiene una lógica
posición inicial como una junta rotativa y desea que esa junta se encuentre en casa
la posición actual cuando se presiona el botón "Home All" en el
Axis gui, luego se necesitan las siguientes entradas ini para esa articulación.

. HOME_SEARCH_VEL = 0
. HOME_LATCH_VEL = 0
. HOME_USE_INDEX = NO
. HOME equivale a HOME_OFFSET
. HOME_SEQUENCE = 0 (u otro número de secuencia válido)

[NOTA]
Los valores predeterminados para HOME_SEARCH_VEL, HOME_LATCH_VEL no especificado,
HOME_USE_INDEX, HOME y HOME_OFFSET son * cero *, por lo que pueden ser
se omite cuando se solicita la búsqueda inmediata. Una HOME_SEQUENCE válida
generalmente se debe incluir un número ya que omite una HOME_SEQUENCE
elimina la articulación del comportamiento * HOME ALL * como se indicó anteriormente.

=== Inhibición de referencia (((Inhibición de referencia)))

Se proporciona un pasador de hal (motion.homing-inhibit) para no permitir
iniciación de referencia para "Home All" y articulación individual
buscador de blancos.

Algunos sistemas aprovechan las disposiciones para sincronizar
movimientos de referencia conjunta finales controlados por negativo
[JOINT_N] HOME_SEQUENCE = elementos del archivo ini. Por defecto, el
disposiciones de sincronización no permiten * articulación * trotar antes de
recorrido de referencia con el fin de evitar movimientos de * articulación * que podrían desalinear el
máquina (torres de pórtico, por ejemplo).

El integrador del sistema puede permitir trotar * conjunto * antes de dirigir con
Hal lógica que cambia los elementos [JOINT_N] HOME_SEQUENCE. Esta
La lógica también debe afirmar el pin * motion.homing-inhibit * para garantizar
que el recorrido de referencia no se inicia inadvertidamente cuando trota * conjunto *
está habilitado.

Ejemplo: uniones sincronizadas 0,1 utilizando una secuencia negativa (-1) para
búsqueda sincronizada con un interruptor (allow_jjog) que selecciona un
secuencia positiva (1) para trotar individual * articular * antes de
recorrido de referencia (código hal parcial):

----
loadrt mux2 nombres = home_sequence_mux
loadrt conv_float_s32 names = home_sequence_s32
setp home_sequence_mux.in0 -1
setp home_sequence_mux.in1 1
addf home_sequence_mux servo-thread
addf home_sequence_s32 servo-thread
...
net home_seq_float <= home_sequence_mux.out
net home_seq_float => home_sequence_s32.in
net home_seq_s32 <= home_sequence_s32.out
net home_seq_s32 => ini.0.home_sequence
net home_seq_s32 => ini.1.home_sequence
...
# allow_jjog: pin creado por un panel virtual o conmutador de hardware
net hsequence_select <= allow_jjog
net hsequence_select => home_sequence_mux.sel
net hsequence_select => motion.homing-inhibit
----

[NOTA]

Los pines iniciales (como ini.N.home_sequence) no están disponibles hasta
Milltask comienza, por lo que la ejecución de los comandos hal anteriores debe ser
diferido utilizando un halfgui postgui o un retraso
[APLICACIÓN] APLICACIÓN = script.

[NOTA]
Sincronización en tiempo real del trote articular para múltiples articulaciones
requiere conexiones hal adicionales para el generador de pulso manual
(MPG) tipo jog pins (joint.N.enable, joint.N.scale, joint.N.counts).

Un ejemplo de configuración de simulación (gantry_jjog.ini) que demuestra
el trote conjunto cuando se utilizan secuencias de inicio negativas se encuentra en:
configs / sim / axis / gantry / directorio.

